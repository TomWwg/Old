package com.sws.service.imp;import java.util.ArrayList;import java.util.List;import org.springframework.beans.factory.annotation.Autowired;import com.gk.extend.hibernate.entity.QueryEntity;import com.sws.dao.ScheduleDao;import com.sws.model.ScheduleTemplate;import com.sws.service.ScheduleService;import com.sys.core.util.CollectionUtils;import com.sys.core.util.StringUtils;import com.sys.core.util.bean.Page;public class ScheduleServiceImpl implements ScheduleService {	@Autowired	private ScheduleDao scheduleDao;		@Override	public ScheduleTemplate getById(Long id) {		// TODO Auto-generated method stub		return scheduleDao.get(id);	}	@Override	public void save(ScheduleTemplate scheduleTeplate) {		// TODO Auto-generated method stub		scheduleDao.save(scheduleTeplate);	}	@Override	public void update(ScheduleTemplate scheduleTemplate) {		// TODO Auto-generated method stub		scheduleDao.update(scheduleTemplate);	}	@Override	public void deleteAll(String ids) {		// TODO Auto-generated method stub		if (StringUtils.isNotBlank(ids)) {            List<Long> idList = CollectionUtils.toLongList(ids);            if (CollectionUtils.isNotEmpty(idList)) {                for (Long id : idList) {                	scheduleDao.deleteById(id);                }            }        }	}	@Override	public Page page(String departIds, QueryEntity queryEntity, int start,			int limit, String sortname, String sortorder) {		// TODO Auto-generated method stub		List<String> paramList = new ArrayList<String>();		List<Object> valueList = new ArrayList<Object>();		if(StringUtils.isNotBlank(queryEntity.getStr1())){			paramList.add("no");			valueList.add(queryEntity.getStr1());		}		if(StringUtils.isNotBlank(queryEntity.getStr2())){			paramList.add("name");			valueList.add(queryEntity.getStr2());		}		 Page page = scheduleDao.page(paramList.toArray(new String[paramList.size()]), valueList.toArray(),start, limit, sortname,				 sortorder.toLowerCase().equals("asc")?true:false);		return page;	}}