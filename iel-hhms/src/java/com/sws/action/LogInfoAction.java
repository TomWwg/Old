package com.sws.action;import java.util.List;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Scope;import org.springframework.stereotype.Controller;import com.sws.common.AjaxUtil;import com.sws.common.baseAction.BaseAction;import com.sws.common.entity.PageInfo;import com.sws.model.LogInfo;import com.sws.service.LogInfoService;import com.sys.core.util.JsonUtils;import com.sys.core.util.bean.Page;@Controller@Scope("prototype")public class LogInfoAction extends BaseAction<LogInfoAction> {	private static final long serialVersionUID = -5943387633096348801L;	private String logTxt;	private Long currentUserId;	@Autowired	private LogInfoService logInfoService;		/**	 * 进入日志列表	 * @return	 */	public String logInfoList() {		currentUserId = Long.valueOf(getCommSession().getUserId());		return "logInfoList";	}		/**	 * 日志列表显示	 * @return	 */	@SuppressWarnings("unchecked")	public void findPageList() {		List<LogInfo> logInfos = null;		long total = 0;		currentUserId = Long.valueOf(getCommSession().getUserId());		if(currentUserId == 1){			page = logInfoService.page(queryEntity, _page, rowNum, sortname,sortorder);			logInfos = (List<LogInfo>) page.getResult();			total = page.getTotal();		} else {			logInfos = logInfoService.findLogsWhileUserNotAdmin(queryEntity, _page, rowNum, sortname, sortorder);			total = logInfos.size();			PageInfo<LogInfo> pageInfo = new PageInfo<LogInfo>();			logInfos = pageInfo.listByPage(_page, rowNum, logInfos);		}		page = new Page(_page, rowNum, logInfos, total);		for(LogInfo log:(List<LogInfo>)page.getResult()){			if(log.getUserInfo()!=null&&log.getUserInfo().getName()!=null){				log.setOptUser(log.getUserInfo().getName());			}		}		AjaxUtil.ajaxWrite(JsonUtils.object2Json(page));	}	public String findUserInfo() {	//	writeResponse(JsonUtils.object2Json(userService.findAllUserInfo()));		return null;	}	public String getLogTxt() {		return logTxt;	}	public void setLogTxt(String logTxt) {		this.logTxt = logTxt;	}	public Long getCurrentUserId() {		return currentUserId;	}	public void setCurrentUserId(Long currentUserId) {		this.currentUserId = currentUserId;	}	}