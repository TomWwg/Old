package com.sws.action;import java.util.ArrayList;import java.util.List;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Scope;import org.springframework.stereotype.Controller;import com.alibaba.fastjson.JSONObject;import com.sws.common.AjaxUtil;import com.sws.common.baseAction.BaseAction;import com.sws.common.until.ByteUtil;import com.sws.common.until.StringUtil;import com.sws.dao.ApSetDao;import com.sws.model.ApSet;import com.sws.service.ApSetService;import com.sws.service.SocketService;import com.sys.core.util.JsonUtils;import com.sys.core.util.bean.Page;@Controller@Scope("prototype")public class ApSetAction extends BaseAction<ApSet> {	private static final long serialVersionUID = -5943387633096348801L;	private Logger log = LoggerFactory.getLogger(ApSetAction.class);	@Autowired    private SocketService socketService;	@Autowired	private ApSetDao apSetDao;	@Autowired	private ApSetService apService;	private String ip;	private String apNo;	private String postCode;//邮编3	private String hospitalNo;//3	private String departNo;//2		/**	 * 进入AP设置列表	 */	public String list(){		return PAGE;	}	/**	 * AP设置显示	 */	public void queryApListAjax(){		page = apService.page(queryEntity, _page, rowNum, sortname,sortorder);		page = new Page(_page, rowNum, page.getResult(),  page.getTotal());		AjaxUtil.ajaxWrite(JsonUtils.object2Json(page));	}		public String apSetDialog(){		if(StringUtil.isNotBlank(ids)){			entity = apService.getById(Long.valueOf(ids));		}		return "apSet";	}	//读取ap编号	public void apNoGet(){		byte code = 3;		String[] ipArray = ip.split("\\.");		List<byte[]> sendData = new ArrayList<byte[]>();		byte[] ipNo = new byte[4];		byte[] dataSum = new byte[28];		for(byte i=0;i<28;i++){			dataSum[i]=0x0;		}		for(Integer i=ipArray.length-1;i>=0;i--){			ipNo[i]=ByteUtil.intToByte(Integer.valueOf(ipArray[i]));		}		dataSum[0]=(byte) 0x90;		dataSum[1]=(byte) 0x04;//查询ID		sendData.add(dataSum);		List<Integer> seqs =socketService.send(sendData,ByteUtil.GET_AP_NO,ipNo);//发送		for(Integer seq:seqs){			byte[] back = socketService.getResultBySeq(seq);			if (back != null) {				int error = ByteUtil.byteToInt(back, 2, 11);				code = ByteUtil.intToByte(error);				ApSet apSet = apSetDao.findUniqueBy("ip", ip);				setApNo(apSet.getNo());			}		}		JSONObject obj = new JSONObject();		obj.put("code", code);		obj.put("apNo", apNo);		writeResponse(obj.toString());	}	// 读取ap编码	public void apCodeGet() {		byte code = 3;		String[] ipArray = ip.split("\\.");		List<byte[]> sendData = new ArrayList<byte[]>();		byte[] ipNo = new byte[4];		byte[] dataSum = new byte[28];		for (byte i = 0; i < 28; i++) {			dataSum[i] = 0x0;		}		for (Integer i = ipArray.length - 1; i >=0; i--) {			ipNo[i] = ByteUtil.intToByte(Integer.valueOf(ipArray[i]));		}		dataSum[0] = (byte) 0x90;		dataSum[1] = (byte) 0x05;// 查询医院编码		sendData.add(dataSum);		List<Integer> seqs = socketService.send(sendData, ByteUtil.GET_AP_CODE, ipNo);// 发送		for(Integer seq:seqs){			byte[] back = socketService.getResultBySeq(seq);			if (back != null) {				int error = ByteUtil.byteToInt(back, 2, 11);				code = ByteUtil.intToByte(error);				ApSet apSet = apSetDao.findUniqueBy("ip", ip);				if(apSet.getPostCode()!=null){					setPostCode(apSet.getPostCode());				}				if(apSet.getHospitalNo()!=null){					setHospitalNo(apSet.getHospitalNo());				}				if(apSet.getDepartNo()!=null){					setDepartNo(apSet.getDepartNo());				}			}		}		JSONObject obj = new JSONObject();		obj.put("code", code);		obj.put("postCode", postCode);		obj.put("hospitalNo", hospitalNo);		obj.put("departNo", departNo);		writeResponse(obj.toString());	}	//设置ap编号	public void apNoSet() {		byte code = 3;		String[] ipArray = ip.split("\\.");		List<byte[]> sendData = new ArrayList<byte[]>();		byte[] ipNo = new byte[4];		byte[] dataSum = new byte[28];		byte[] bcdAraay = ByteUtil.str2Bcd(apNo);		for(byte i=0;i<28;i++){			dataSum[i]=0x0;		}		for(Integer i=ipArray.length-1;i>=0;i--){			ipNo[i]=ByteUtil.intToByte(Integer.valueOf(ipArray[i]));		}		dataSum[0]=(byte) 0x90;		dataSum[1]=(byte) 0x02;//设置ID		dataSum[8]=(byte) 0x38;		dataSum[11]=(byte) 0x38;		dataSum[12]=bcdAraay[0];		dataSum[13]=bcdAraay[1];		sendData.add(dataSum);		List<Integer> seqs =socketService.send(sendData,ByteUtil.SET_AP_NO,ipNo);//发送		for(Integer seq:seqs){			byte[] back = socketService.getResultBySeq(seq);			if (back != null) {				int error = ByteUtil.byteToInt(back, 2, 11);				code = ByteUtil.intToByte(error);				ApSet apSet = apSetDao.findUniqueBy("ip", ip);				setApNo(apSet.getNo());			}		}		JSONObject obj = new JSONObject();		obj.put("code", code);		obj.put("apNo", apNo);		writeResponse(obj.toString());	}	// 设置ap编码	public void apCodeSet() {		byte code = 3;		String[] ipArray = ip.split("\\.");		List<byte[]> sendData = new ArrayList<byte[]>();		byte[] ipNo = new byte[4];		byte[] dataSum = new byte[28];		byte[] bcdPostAraay = ByteUtil.str2Bcd(postCode);		byte[] bcdHospitalAraay = ByteUtil.str2Bcd(hospitalNo);		byte[] bcdDepartAraay = ByteUtil.str2Bcd(departNo);		for (byte i = 0; i < 28; i++) {			dataSum[i] = 0x0;		}		for (Integer i = ipArray.length - 1; i >= 0; i--) {			ipNo[i] = ByteUtil.intToByte(Integer.valueOf(ipArray[i]));		}		dataSum[0] = (byte) 0x90;		dataSum[1] = (byte) 0x03;// 设置医院编码		dataSum[8] = (byte) 0x38;		dataSum[16]=bcdPostAraay[0];		dataSum[17]=bcdPostAraay[1];		dataSum[18]=bcdPostAraay[2];		dataSum[19]=bcdHospitalAraay[0];		dataSum[20]=bcdHospitalAraay[1];		dataSum[21]=bcdHospitalAraay[2];		dataSum[22]=bcdDepartAraay[0];		dataSum[23]=bcdDepartAraay[1];		sendData.add(dataSum);		List<Integer> seqs = socketService.send(sendData, ByteUtil.SET_AP_CODE, ipNo);// 发送		for(Integer seq:seqs){			byte[] back = socketService.getResultBySeq(seq);			if (back != null) {				int error = ByteUtil.byteToInt(back, 2, 11);				code = ByteUtil.intToByte(error);				ApSet apSet = apSetDao.findUniqueBy("ip", ip);				if(apSet.getPostCode()!=null){					setPostCode(apSet.getPostCode());				}				if(apSet.getHospitalNo()!=null){					setHospitalNo(apSet.getHospitalNo());				}				if(apSet.getDepartNo()!=null){					setDepartNo(apSet.getDepartNo());				}			}		}		JSONObject obj = new JSONObject();		obj.put("code", code);		obj.put("postCode", postCode);		obj.put("hospitalNo", hospitalNo);		obj.put("departNo", departNo);		writeResponse(obj.toString());	}		/**	 * 删除	 * @return	 */	public String delData(){		long begin = System.currentTimeMillis();		try {			apService.deleteAll(ids);		}catch(Exception ex){			log.error(ex.getMessage());			success = false;			msg = ex.getMessage();		}		log.info("delete data use time:"+(System.currentTimeMillis()-begin)+"ms");		AjaxUtil.ajaxWrite(success,msg);		return SUCCESS;	}	public ApSetService getApService() {		return apService;	}	public void setApService(ApSetService apService) {		this.apService = apService;	}	public String getIp() {		return ip;	}	public void setIp(String ip) {		this.ip = ip;	}	public String getApNo() {		return apNo;	}	public void setApNo(String apNo) {		this.apNo = apNo;	}	public String getPostCode() {		return postCode;	}	public void setPostCode(String postCode) {		this.postCode = postCode;	}	public String getHospitalNo() {		return hospitalNo;	}	public void setHospitalNo(String hospitalNo) {		this.hospitalNo = hospitalNo;	}	public String getDepartNo() {		return departNo;	}	public void setDepartNo(String departNo) {		this.departNo = departNo;	}	}