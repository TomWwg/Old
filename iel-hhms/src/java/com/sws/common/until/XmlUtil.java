package com.sws.common.until;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.InputStream;import java.io.InputStreamReader;import java.io.UnsupportedEncodingException;import java.net.URLDecoder;import java.util.ArrayList;import java.util.List;import org.dom4j.Document;import org.dom4j.DocumentException;import org.dom4j.Element;import org.dom4j.io.SAXReader;import com.sws.common.entity.XmlBo;/**  * @author WangYabei 2015-6-21 上午7:59:02  * @version V1.0 * @Edit {修改人} 2015-6-21 */public class XmlUtil {	private static SAXReader reader = new SAXReader();	private static Document configDoc;	static {		try{			load();		} catch(DocumentException e){					}	}		public static void load() throws DocumentException{		String defaultPath = "constParameter.xml";		if(configDoc == null){			try {				defaultPath = URLDecoder.decode(XmlUtil.class.getResource("/").getFile()+defaultPath, "UTF-8");			}			catch (UnsupportedEncodingException e){			}			InputStream ifile;			InputStreamReader ir = null;			try {				ifile = new FileInputStream(defaultPath);				ir = new InputStreamReader(ifile,"UTF-8");			}catch (FileNotFoundException e){							}catch (UnsupportedEncodingException e){							}			configDoc = reader.read(ir);			}	}	public static List<XmlBo> findParameters(String typeKey, String parametersKey){		try{			@SuppressWarnings("unchecked")			List<Element> list = (List<Element>) configDoc.selectNodes("/types/type[@key='"+typeKey +"']/parameters[@key='"+parametersKey+"']/parameter");			List<XmlBo> xmlList = new ArrayList<XmlBo>();			for(Element e: list){				XmlBo xmlBo = new XmlBo();				xmlBo.setName(e.getText());				xmlBo.setValue(e.attributeValue("key"));				xmlList.add(xmlBo);			}			return xmlList;		}		catch(Exception e){			return null;		}	}	//Xml的name--》value	public static String getXmlValue(String name,List<XmlBo> xmlList){		String value="";		for(XmlBo list:xmlList){			if(name.equals(list.getName())){				value = list.getValue();				break;			}		}		return value;	}	public static String getXmlName(String value,List<XmlBo> xmlList){		String name="";		for(XmlBo list:xmlList){			if(value.equals(list.getValue())){				name = list.getName();				break;			}		}		return name;	}	}