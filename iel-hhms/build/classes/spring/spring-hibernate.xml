<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<bean id="pageHibernateTemplate"
		class="com.gk.extend.hibernate.template.PageHibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="generalDao" class="com.gk.extend.hibernate.dao.GeneralDao"
		autowire="byName" />

	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource"
		p:driver="${hibernate.connection.driver_class}" p:driverUrl="${hibernate.connection.url}"
		p:user="${hibernate.connection.username}" p:password="${hibernate.connection.password}"
		p:alias="${proxool.pool_alias}" p:houseKeepingTestSql="${proxool.house-keeping-test-sql}"
		p:testBeforeUse="${proxool.test-before-use}" p:maximumConnectionCount="${proxool.maximum-connection-count}"
		p:minimumConnectionCount="${proxool.minimum-connection-count}"
		p:prototypeCount="${proxool.prototype-count}" p:trace="true" />

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="mappingLocations">
			<list>
				<value>classpath:/com/sws/model/*.hbm.xml</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
			</props>
		</property>

		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean
						class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
				</entry>
				<!-- <entry key="save-update">
					<bean class="com.sws.dao.imp.BaseCUListener" />
				</entry>
				<entry key="save">
					<bean class="com.sws.dao.imp.BaseCUListener" />
				</entry>
				<entry key="update">
					<bean class="com.sws.dao.imp.BaseCUListener" />
				</entry> -->
			</map>
		</property>
	</bean>

	<bean id="hibernateTxManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<tx:advice id="tx-advice-hibernate" transaction-manager="hibernateTxManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

<!-- 	<aop:config>
		<aop:pointcut id="allDaoMethod"
			expression="execution(* com.gk.sys..service.*Service.*(..))" />
		<aop:advisor advice-ref="tx-advice-hibernate"
			pointcut-ref="allDaoMethod" />
	</aop:config> -->
	 <aop:config>	
		<aop:pointcut id="servicePointcut"
			expression="execution(*  com.sws.service.*.*(..))" />
		<aop:advisor advice-ref="tx-advice-hibernate"	pointcut-ref="servicePointcut" />
	</aop:config> 
	
</beans>
